<mvc:View
    controllerName="sap.ushell.applications.PageComposer.controller.PageDetailEdit"
    xmlns="sap.m"
    xmlns:core="sap.ui.core"
    xmlns:l="sap.ui.layout"
    xmlns:f="sap.f"
    xmlns:mvc="sap.ui.core.mvc">
    <f:DynamicPage
        id="pageDetailEdit"
        fitContent="true"
        headerExpanded="{/headerExpanded}"
        backgroundDesign="Transparent"
        class="sapUiNoContentPadding">
        <f:title>
            <f:DynamicPageTitle>
                <f:heading>
                    <Title text="{/page/content/title}" wrapping="true" />
                </f:heading>
                <f:expandedContent>
                    <HBox displayInline="true">
                        <ObjectAttribute title="{i18n>Label.PageID}" text="{/page/content/id}" />
                        <!-- TBD: make visible when the role ID is available -->
                        <ObjectAttribute
                            visible="false"
                            title="{i18n>Label.AssignedRole}"
                            text=""
                            class="sapUiLargeMarginBegin" />
                    </HBox>
                </f:expandedContent>
                <f:snappedContent>
                    <!-- Maximize working area when the header is snapped -->
                </f:snappedContent>
                <f:actions>
                    <Button text="{i18n>Button.ShowCatalogs}" type="Transparent" press=".onUpdateSideContentVisibility" />
                    <Button text="{i18n>Button.PagePreview}" type="Transparent" press=".preview(${/page/content/id})" />
                </f:actions>
            </f:DynamicPageTitle>
        </f:title>
        <f:header>
            <f:DynamicPageHeader pinnable="false">
                <core:Fragment fragmentName="sap.ushell.applications.PageComposer.view.PageInfoEdit" type="XML" />
            </f:DynamicPageHeader>
        </f:header>
        <f:content>
            <Page showHeader="false">
                <content>
                    <l:DynamicSideContent
                        id="layoutContent"
                        sideContentFallDown="BelowM"
                        sideContentPosition="End"
                        containerQuery="true">
                        <l:mainContent>
                            <core:Fragment fragmentName="sap.ushell.applications.PageComposer.view.Page" type="XML" />
                        </l:mainContent>
                        <l:sideContent>
                            <core:Fragment fragmentName="sap.ushell.applications.PageComposer.view.TileSelector" type="XML" />
                        </l:sideContent>
                    </l:DynamicSideContent>
                </content>
                <footer>
                    <OverflowToolbar id="footer">
                        <Button icon="sap-icon://message-popup" text="{/errorslength}" type="Emphasized" press=".handleMessagePopoverPress" visible="{= !!${/errorslength} }"/>
                        <ToolbarSpacer />
                        <Button text="{i18n>Button.Save}" type="Emphasized" press=".onSave" />
                        <Button text="{i18n>Button.Cancel}" type="Transparent" press=".onCancel" />
                    </OverflowToolbar>
                </footer>
            </Page>
        </f:content>
    </f:DynamicPage>
</mvc:View>
