<mvc:View
        controllerName="sap.ushell.applications.PageComposer.controller.PageDetail"
        xmlns="sap.m"
        xmlns:core="sap.ui.core"
        xmlns:f="sap.f"
        xmlns:mvc="sap.ui.core.mvc">
    <f:DynamicPage id="pageDetail" fitContent="true" class="sapUshellPageLayout" backgroundDesign="Transparent">
        <f:title>
            <f:DynamicPageTitle>
                <f:heading>
                    <Title text="{/page/content/title}"/>
                </f:heading>
                <f:expandedContent>
                    <HBox displayInline="true">
                        <ObjectAttribute title="{i18n>Label.PageID}" text="{/page/content/id}"/>
                        <!-- TBD: make visible when the role ID is available -->
                        <ObjectAttribute
                            visible="false"
                            title="{i18n>Label.AssignedRole}"
                            text=""
                            class="sapUiLargeMarginBegin"/>
                    </HBox>
                </f:expandedContent>
                <f:snappedContent>
                    <HBox displayInline="true">
                        <ObjectAttribute title="{i18n>Label.PageID}" text="{/page/content/id}"/>
                        <!-- TBD: make visible when the role ID is available -->
                        <ObjectAttribute
                            visible="false"
                            title="{i18n>Label.AssignedRole}"
                            text="assigned role"
                            class="sapUiLargeMarginBegin"/>
                    </HBox>
                </f:snappedContent>
                <f:actions>
                    <Button
                            text="{i18n>Button.Edit}"
                            type="Emphasized"
                            press="onEdit"/>
                    <!-- Do not show the Copy button until the functionality is implemented -->
                    <Button
                            visible="false"
                            text="{i18n>Button.Copy}"
                            type="Transparent"
                            press="onCopy"/>
                    <Button
                            text="{i18n>Button.Delete}"
                            type="Transparent"
                            press="onDelete"/>
                    <Button
                            text="{i18n>Button.PagePreview}"
                            type="Transparent"
                            press="preview(${/page/content/id})"/>
                </f:actions>
            </f:DynamicPageTitle>
        </f:title>
        <f:header>
            <f:DynamicPageHeader pinnable="false">
                <core:Fragment fragmentName="sap.ushell.applications.PageComposer.view.PageInfo" type="XML"/>
            </f:DynamicPageHeader>
        </f:header>
        <f:content>
            <core:Fragment fragmentName="sap.ushell.applications.PageComposer.view.Page" type="XML" />
        </f:content>
    </f:DynamicPage>
</mvc:View>
